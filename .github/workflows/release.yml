---
name: Release Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint
        uses: super-linter/super-linter@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: CHANGELOG.md
          ENABLE_COMMITLINT_STRICT_MODE: true
          ENFORCE_COMMITLINT_CONFIGURATION_CHECK: true
          VALIDATE_PYTHON_ISORT: false

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Dependencies
        run: |
          pip install -r src/requirements.txt
          pip install -r test/requirements.txt
      - name: Run Tests
        run: |
          pytest --junitxml=${{ github.workspace }}/reports/junit.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Python Tests
          path: ${{ github.workspace }}/reports/junit.xml
          reporter: java-junit

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    permissions:
      contents: read
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/create-github-app-token@v1
        id: token
        with:
          app-id: ${{ secrets.APP_ID_SEMREL }}
          private-key: ${{ secrets.APP_KEY_SEMREL }}
      - name: Semantic release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            semantic-release-replace-plugin
          dry_run: ${{ github.event_name == 'pull_request' }}
          ci: true
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
